services:
  mongo:
    image: mongo:7
    command: ["--replSet","rs0","--bind_ip_all"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.adminCommand({ ping: 1 }).ok' | grep 1 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
    ports:
      - "${PUBLISH_MONGO:-0}:27017"   # set PUBLISH_MONGO=27017 if you want host access
    restart: unless-stopped

  # one-shot init: initiate rs + create app user/db
  mongo-init:
    image: mongo:7
    depends_on:
      mongo:
        condition: service_healthy
    entrypoint:
      - bash
      - -lc
      - |
        set -e
        mongosh "mongodb://$$MONGO_INITDB_ROOT_USERNAME:$$MONGO_INITDB_ROOT_PASSWORD@mongo:27017/admin" --eval '
          const rs = rs.status().ok ? "ok" : null;
          if (!rs) { rs.initiate({_id:"rs0",members:[{_id:0,host:"mongo:27017"}]}); }
        '
        # wait for PRIMARY
        for i in {1..30}; do
          state=$(mongosh --quiet --eval 'db.isMaster().ismaster' mongodb://mongo:27017/admin || echo false)
          [ "$state" = "true" ] && break || sleep 2
        done
        # create app user if missing
        mongosh "mongodb://$$MONGO_INITDB_ROOT_USERNAME:$$MONGO_INITDB_ROOT_PASSWORD@mongo:27017/admin" --eval '
          const dbname = env.MONGO_APP_DB; const user = env.MONGO_APP_USER; const pass = env.MONGO_APP_PASS;
          db.getSiblingDB(dbname).createUser({user:user,pwd:pass,roles:[{role:"readWrite",db:dbname}]})
        ' || echo "user likely exists; continuing"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_APP_DB: ${MONGO_APP_DB}
      MONGO_APP_USER: ${MONGO_APP_USER}
      MONGO_APP_PASS: ${MONGO_APP_PASS}
    restart: "no"

  app:
    build:
      context: .
    environment:
      # note replicaSet=rs0 because we enabled it; remove param if you decide to skip replset
      MONGODB_URI: mongodb://${MONGO_APP_USER}:${MONGO_APP_PASS}@mongo:27017/${MONGO_APP_DB}?authSource=${MONGO_APP_DB}&replicaSet=rs0
      # tweak heap if needed, e.g. "512m"
      # JAVA_TOOL_OPTIONS: -Xms256m -Xmx512m -XX:+UseZGC -XX:+ZGenerational
    depends_on:
      mongo-init:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/actuator/health/readiness"]
      interval: 10s
      timeout: 3s
      retries: 12
    ports:
      - "8080:8080"
    restart: unless-stopped

volumes:
  mongo-data: